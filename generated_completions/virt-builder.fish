# virt-builder
# Autogenerated from man page /usr/share/man/man1/virt-builder.1.gz
complete -c virt-builder -l help -d 'X Item "--help" Display help'
complete -c virt-builder -l arch -d 'X Item "--arch ARCHITECTURE" Use the specified architecture for the output im…'
complete -c virt-builder -l attach -d 'X Item "--attach ISOFILE" During the customization phase, the given disk is a…'
complete -c virt-builder -l attach-format -d 'X Item "--attach-format FORMAT" Specify the disk format for the next --attach…'
complete -c virt-builder -l cache -d 'X Item "--cache DIR"'
complete -c virt-builder -l no-cache -d 'X Item "--no-cache" '
complete -c virt-builder -l cache-all-templates -d 'X Item "--cache-all-templates" Download all templates to the cache and then e…'
complete -c virt-builder -l check-signature -d 'X Item "--check-signature"'
complete -c virt-builder -l no-check-signature -d 'X Item "--no-check-signature" '
complete -c virt-builder -l colors -d 'X Item "--colors"'
complete -c virt-builder -l colours -d 'X Item "--colours" . PD Use ANSI colour sequences to colourize messages'
complete -c virt-builder -l curl -d 'X Item "--curl CURL" Specify an alternate curl\\|(1) binary'
complete -c virt-builder -l delete-cache -d 'X Item "--delete-cache" Delete the template cache.   See "CACHING"'
complete -c virt-builder -l no-delete-on-failure -d 'X Item "--no-delete-on-failure" Donât delete the output file on failure to …'
complete -c virt-builder -l fingerprint -d 'X Item "--fingerprint \'AAAA BBBB '
complete -c virt-builder -l format -d 'X Item "--format qcow2"'
complete -c virt-builder -l get-kernel -d 'X Item "--get-kernel IMAGE" This option extracts the kernel and initramfs fro…'
complete -c virt-builder -l gpg -d 'X Item "--gpg GPG" Specify an alternate gpg\\|(1) (GNU Privacy Guard) binary'
complete -c virt-builder -s l -d 'X Item "-l [os-version]"'
complete -c virt-builder -l list -d 'X Item "--list [os-version]"'
complete -c virt-builder -l list-format -d 'X Item "--list --list-format format [os-version]"'
complete -c virt-builder -l long -d 'X Item "--list --long [os-version]" '
complete -c virt-builder -l machine-readable -d 'X Item "--machine-readable"'
complete -c virt-builder -s m -d 'X Item "-m MB"'
complete -c virt-builder -l memsize -d 'X Item "--memsize MB" '
complete -c virt-builder -l network -d 'X Item "--network"'
complete -c virt-builder -l no-network -d 'X Item "--no-network" '
complete -c virt-builder -l no-sync -d 'X Item "--no-sync" Do not sync the output file on exit'
complete -c virt-builder -l notes -d 'X Item "--notes os-version" List any notes associated with this guest, then e…'
complete -c virt-builder -s o -d 'X Item "-o filename"'
complete -c virt-builder -l output -d 'X Item "--output filename" . PD Write the output to filename'
complete -c virt-builder -l print-cache -d 'X Item "--print-cache" Print information about the template cache'
complete -c virt-builder -s q -d 'X Item "-q"'
complete -c virt-builder -l quiet -d 'X Item "--quiet" . PD Donât print ordinary progress messages'
complete -c virt-builder -l size -d 'X Item "--size SIZE" Select the size of the output disk, where the size can b…'
complete -c virt-builder -l smp -d 'X Item "--smp N" Enable N â¥ 2 virtual CPUs for --run scripts to use'
complete -c virt-builder -l source -d 'X Item "--source URL" Set the source URL to look for indexes'
complete -c virt-builder -l no-warn-if-partition -d 'X Item "--no-warn-if-partition" Do not emit a warning if the output device is…'
complete -c virt-builder -s v -d 'X Item "-v"'
complete -c virt-builder -l verbose -d 'X Item "--verbose" . PD Enable debug messages and/or produce verbose output'
complete -c virt-builder -s V -d 'X Item "-V"'
complete -c virt-builder -l version -d 'X Item "--version" . PD Display version number and exit'
complete -c virt-builder -l wrap -d 'X Item "--wrap" Wrap error, warning, and informative messages'
complete -c virt-builder -s x -d 'X Item "-x" Enable tracing of libguestfs API calls'
complete -c virt-builder -l append-line -d 'X Item "--append-line FILE:LINE" Append a single line of text to the \\f(CW\\*(…'
complete -c virt-builder -l chmod -d 'X Item "--chmod PERMISSIONS:FILE" Change the permissions of \\f(CW\\*(C`FILE\\*(…'
complete -c virt-builder -l chown -d 'X Item "--chown UID:GID:PATH" Change the owner user and group ID of a file or…'
complete -c virt-builder -l commands-from-file -d 'X Item "--commands-from-file FILENAME" Read the customize commands from a fil…'
complete -c virt-builder -l copy -d 'X Item "--copy SOURCE:DEST" Copy files or directories recursively inside the …'
complete -c virt-builder -l copy-in -d 'X Item "--copy-in LOCALPATH:REMOTEDIR" Copy local files or directories recurs…'
complete -c virt-builder -l delete -d 'X Item "--delete PATH" Delete a file from the guest'
complete -c virt-builder -l edit -d 'X Item "--edit FILE:EXPR" Edit \\f(CW\\*(C`FILE\\*(C\' using the Perl expression …'
complete -c virt-builder -l firstboot -d 'X Item "--firstboot SCRIPT" Install \\f(CW\\*(C`SCRIPT\\*(C\' inside the guest, s…'
complete -c virt-builder -l firstboot-command -d 'X Item "--firstboot-command \'CMD+ARGS\'" Run command (and arguments) inside th…'
complete -c virt-builder -l firstboot-install -d 'X Item "--firstboot-install PKG,PKG'
complete -c virt-builder -l hostname -d 'X Item "--hostname HOSTNAME" Set the hostname of the guest to \\f(CW\\*(C`HOSTN…'
complete -c virt-builder -l inject-qemu-ga -d 'X Item "--inject-qemu-ga METHOD" Inject the QEMU Guest Agent into a Windows g…'
complete -c virt-builder -l inject-virtio-win -d 'X Item "--inject-virtio-win METHOD" Inject virtio-win drivers into a Windows …'
complete -c virt-builder -l install -d 'X Item "--install PKG,PKG'
complete -c virt-builder -l link -d 'X Item "--link TARGET:LINK[:LINK'
complete -c virt-builder -l mkdir -d 'X Item "--mkdir DIR" Create a directory in the guest'
complete -c virt-builder -l move -d 'X Item "--move SOURCE:DEST" Move files or directories inside the guest'
complete -c virt-builder -l no-logfile -d 'X Item "--no-logfile" Scrub \\f(CW\\*(C`builder'
complete -c virt-builder -l no-selinux-relabel -d 'X Item "--no-selinux-relabel" Do not attempt to correct the SELinux labels of…'
complete -c virt-builder -l password -d 'X Item "--password USER:SELECTOR" Set the password for \\f(CW\\*(C`USER\\*(C\''
complete -c virt-builder -l password-crypto -d 'X Item "--password-crypto md5|sha256|sha512" When the virt tools change or se…'
complete -c virt-builder -l root-password -d 'X Item "--root-password SELECTOR" Set the root password'
complete -c virt-builder -l run -d 'X Item "--run SCRIPT" Run the shell script (or any program) called \\f(CW\\*(C`…'
complete -c virt-builder -l run-command -d 'X Item "--run-command \'CMD+ARGS\'" Run the command and arguments on the disk i…'
complete -c virt-builder -l scrub -d 'X Item "--scrub FILE" Scrub a file from the guest'
complete -c virt-builder -l selinux-relabel -d 'X Item "--selinux-relabel" This is a compatibility option that does nothing'
complete -c virt-builder -l sm-attach -d 'X Item "--sm-attach SELECTOR" Attach to a pool using \\f(CW\\*(C`subscription-m…'
complete -c virt-builder -l sm-credentials -d 'X Item "--sm-credentials SELECTOR" Set the credentials for \\f(CW\\*(C`subscrip…'
complete -c virt-builder -l sm-register -d 'X Item "--sm-register" Register the guest using \\f(CW\\*(C`subscription-manage…'
complete -c virt-builder -l sm-remove -d 'X Item "--sm-remove" Remove all the subscriptions from the guest using \\f(CW\\…'
complete -c virt-builder -l sm-unregister -d 'X Item "--sm-unregister" Unregister the guest using \\f(CW\\*(C`subscription-ma…'
complete -c virt-builder -l ssh-inject -d 'X Item "--ssh-inject USER[:SELECTOR]" Inject an ssh key so the given \\f(CW\\*(…'
complete -c virt-builder -l tar-in -d 'X Item "--tar-in TARFILE:REMOTEDIR" Copy local files or directories from a lo…'
complete -c virt-builder -l timezone -d 'X Item "--timezone TIMEZONE" Set the default timezone of the guest to \\f(CW\\*…'
complete -c virt-builder -l touch -d 'X Item "--touch FILE" This command performs a touch\\|(1)-like operation on \\f…'
complete -c virt-builder -l truncate -d 'X Item "--truncate FILE" This command truncates \\f(CW\\*(C`FILE\\*(C\' to a zero…'
complete -c virt-builder -l truncate-recursive -d 'X Item "--truncate-recursive PATH" This command recursively truncates all fil…'
complete -c virt-builder -l uninstall -d 'X Item "--uninstall PKG,PKG'
complete -c virt-builder -l update -d 'X Item "--update" Do the equivalent of \\f(CW\\*(C`yum update\\*(C\', \\f(CW\\*(C`a…'
complete -c virt-builder -l upload -d 'X Item "--upload FILE:DEST" Upload local file \\f(CW\\*(C`FILE\\*(C\' to destinat…'
complete -c virt-builder -l firstboot/--firstboot-command -d 'scripts/commands that are run the first time the guest boots'
complete -c virt-builder -l write
complete -c virt-builder -l import -d ' virt-install --import \\    --name guest --ram 2048 \\    --disk path=disk'
complete -c virt-builder -l os-variant -d 'devices to enable the guest to run most efficiently'

